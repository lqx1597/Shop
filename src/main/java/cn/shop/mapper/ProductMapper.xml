<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.shop.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="cn.shop.po.Product" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_name" property="product_name" jdbcType="VARCHAR" />
    <result column="cat_id" property="cat_id" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="picture_file" property="picture_file" jdbcType="VARCHAR" />
    <result column="sale_price" property="sale_price" jdbcType="INTEGER" />
    <result column="left_number" property="left_number" jdbcType="INTEGER" />
    <result column="shop_id" property="shop_id" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, product_name, cat_id, description, picture_file, sale_price, left_number, shop_id
  </sql>
  <select id="getProductAll" resultType="cn.shop.po.Product">
  select * from product
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.shop.po.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.shop.po.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.shop.po.Product" >
    insert into product (id, product_name, cat_id, 
      description, picture_file, sale_price, 
      left_number, shop_id)
    values (#{id,jdbcType=INTEGER}, #{product_name,jdbcType=VARCHAR}, #{cat_id,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{picture_file,jdbcType=VARCHAR}, #{sale_price,jdbcType=INTEGER}, 
      #{left_number,jdbcType=INTEGER}, #{shop_id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.shop.po.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="product_name != null" >
        product_name,
      </if>
      <if test="cat_id != null" >
        cat_id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="picture_file != null" >
        picture_file,
      </if>
      <if test="sale_price != null" >
        sale_price,
      </if>
      <if test="left_number != null" >
        left_number,
      </if>
      <if test="shop_id != null" >
        shop_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="product_name != null" >
        #{product_name,jdbcType=VARCHAR},
      </if>
      <if test="cat_id != null" >
        #{cat_id,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="picture_file != null" >
        #{picture_file,jdbcType=VARCHAR},
      </if>
      <if test="sale_price != null" >
        #{sale_price,jdbcType=INTEGER},
      </if>
      <if test="left_number != null" >
        #{left_number,jdbcType=INTEGER},
      </if>
      <if test="shop_id != null" >
        #{shop_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.shop.po.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.product_name != null" >
        product_name = #{record.product_name,jdbcType=VARCHAR},
      </if>
      <if test="record.cat_id != null" >
        cat_id = #{record.cat_id,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.picture_file != null" >
        picture_file = #{record.picture_file,jdbcType=VARCHAR},
      </if>
      <if test="record.sale_price != null" >
        sale_price = #{record.sale_price,jdbcType=INTEGER},
      </if>
      <if test="record.left_number != null" >
        left_number = #{record.left_number,jdbcType=INTEGER},
      </if>
      <if test="record.shop_id != null" >
        shop_id = #{record.shop_id,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set id = #{record.id,jdbcType=INTEGER},
      product_name = #{record.product_name,jdbcType=VARCHAR},
      cat_id = #{record.cat_id,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      picture_file = #{record.picture_file,jdbcType=VARCHAR},
      sale_price = #{record.sale_price,jdbcType=INTEGER},
      left_number = #{record.left_number,jdbcType=INTEGER},
      shop_id = #{record.shop_id,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.shop.po.Product" >
    update product
    <set >
      <if test="product_name != null" >
        product_name = #{product_name,jdbcType=VARCHAR},
      </if>
      <if test="cat_id != null" >
        cat_id = #{cat_id,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="picture_file != null" >
        picture_file = #{picture_file,jdbcType=VARCHAR},
      </if>
      <if test="sale_price != null" >
        sale_price = #{sale_price,jdbcType=INTEGER},
      </if>
      <if test="left_number != null" >
        left_number = #{left_number,jdbcType=INTEGER},
      </if>
      <if test="shop_id != null" >
        shop_id = #{shop_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.shop.po.Product" >
    update product
    set product_name = #{product_name,jdbcType=VARCHAR},
      cat_id = #{cat_id,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      picture_file = #{picture_file,jdbcType=VARCHAR},
      sale_price = #{sale_price,jdbcType=INTEGER},
      left_number = #{left_number,jdbcType=INTEGER},
      shop_id = #{shop_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="fingByName" parameterType="String" resultType="cn.shop.po.Product">
  select * from product where product_name like '%${keyWord}%'
  </select>
  <select id="findKeyWordCount" parameterType="String" resultType="int">
  select count(*) from product where product_name like '%${keyWord}%'
  </select>
  
</mapper>