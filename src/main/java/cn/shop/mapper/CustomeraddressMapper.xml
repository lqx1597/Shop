<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.shop.mapper.CustomeraddressMapper" >
  <resultMap id="BaseResultMap" type="cn.shop.po.Customeraddress" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="county" property="county" jdbcType="VARCHAR" />
    <result column="street" property="street" jdbcType="VARCHAR" />
    <result column="acceptor_name" property="acceptor_name" jdbcType="VARCHAR" />
    <result column="acceptor_mobile" property="acceptor_mobile" jdbcType="VARCHAR" />
    <result column="customer_id" property="customer_id" jdbcType="INTEGER" />
    <result column="is_default_address" property="is_default_address" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, province, city, county, street, acceptor_name, acceptor_mobile, customer_id, 
    is_default_address
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.shop.po.CustomeraddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customeraddress
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customeraddress
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customeraddress
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.shop.po.CustomeraddressExample" >
    delete from customeraddress
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.shop.po.Customeraddress" >
    insert into customeraddress (id, province, city, 
      county, street, acceptor_name, 
      acceptor_mobile, customer_id, is_default_address
      )
    values (#{id,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{county,jdbcType=VARCHAR}, #{street,jdbcType=VARCHAR}, #{acceptor_name,jdbcType=VARCHAR}, 
      #{acceptor_mobile,jdbcType=VARCHAR}, #{customer_id,jdbcType=INTEGER}, #{is_default_address,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.shop.po.Customeraddress" >
    insert into customeraddress
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="county != null" >
        county,
      </if>
      <if test="street != null" >
        street,
      </if>
      <if test="acceptor_name != null" >
        acceptor_name,
      </if>
      <if test="acceptor_mobile != null" >
        acceptor_mobile,
      </if>
      <if test="customer_id != null" >
        customer_id,
      </if>
      <if test="is_default_address != null" >
        is_default_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null" >
        #{county,jdbcType=VARCHAR},
      </if>
      <if test="street != null" >
        #{street,jdbcType=VARCHAR},
      </if>
      <if test="acceptor_name != null" >
        #{acceptor_name,jdbcType=VARCHAR},
      </if>
      <if test="acceptor_mobile != null" >
        #{acceptor_mobile,jdbcType=VARCHAR},
      </if>
      <if test="customer_id != null" >
        #{customer_id,jdbcType=INTEGER},
      </if>
      <if test="is_default_address != null" >
        #{is_default_address,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.shop.po.CustomeraddressExample" resultType="java.lang.Integer" >
    select count(*) from customeraddress
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customeraddress
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.county != null" >
        county = #{record.county,jdbcType=VARCHAR},
      </if>
      <if test="record.street != null" >
        street = #{record.street,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptor_name != null" >
        acceptor_name = #{record.acceptor_name,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptor_mobile != null" >
        acceptor_mobile = #{record.acceptor_mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.customer_id != null" >
        customer_id = #{record.customer_id,jdbcType=INTEGER},
      </if>
      <if test="record.is_default_address != null" >
        is_default_address = #{record.is_default_address,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customeraddress
    set id = #{record.id,jdbcType=INTEGER},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      county = #{record.county,jdbcType=VARCHAR},
      street = #{record.street,jdbcType=VARCHAR},
      acceptor_name = #{record.acceptor_name,jdbcType=VARCHAR},
      acceptor_mobile = #{record.acceptor_mobile,jdbcType=VARCHAR},
      customer_id = #{record.customer_id,jdbcType=INTEGER},
      is_default_address = #{record.is_default_address,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.shop.po.Customeraddress" >
    update customeraddress
    <set >
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null" >
        county = #{county,jdbcType=VARCHAR},
      </if>
      <if test="street != null" >
        street = #{street,jdbcType=VARCHAR},
      </if>
      <if test="acceptor_name != null" >
        acceptor_name = #{acceptor_name,jdbcType=VARCHAR},
      </if>
      <if test="acceptor_mobile != null" >
        acceptor_mobile = #{acceptor_mobile,jdbcType=VARCHAR},
      </if>
      <if test="customer_id != null" >
        customer_id = #{customer_id,jdbcType=INTEGER},
      </if>
      <if test="is_default_address != null" >
        is_default_address = #{is_default_address,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.shop.po.Customeraddress" >
    update customeraddress
    set province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      street = #{street,jdbcType=VARCHAR},
      acceptor_name = #{acceptor_name,jdbcType=VARCHAR},
      acceptor_mobile = #{acceptor_mobile,jdbcType=VARCHAR},
      customer_id = #{customer_id,jdbcType=INTEGER},
      is_default_address = #{is_default_address,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
 <select id="findAddress" resultType="cn.shop.po.Customeraddress" parameterType="java.lang.Integer" >
    select *
    from customeraddress
    where customer_id = #{id}
  </select>
  <insert id="addAddress" parameterType="cn.shop.po.Customeraddress">
  insert into customeraddress(acceptor_name,acceptor_mobile,province,city,county,street,customer_id) 
   values(#{acceptor_name},#{acceptor_mobile},#{province},#{city},#{county},#{street},#{customer_id})
   </insert>
   <select id="findCountByCuId" parameterType="int" resultType="int">
   select count(*) from customeraddress where customer_id=#{customer_id}
   </select>
</mapper>